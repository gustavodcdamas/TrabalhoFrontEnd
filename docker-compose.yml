version: '3.8'

services:

  agencia-backend:
    image: gustavodcdamas/agencia-backend:latest
    container_name: agencia-backend
    restart: unless-stopped
    ports:
      - "3333:3333"
    env_file:
      - .env
    volumes:
      - ./logs:/usr/src/app/logs
      - ./uploads:/usr/src/app/uploads
    networks:
      - agencia-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:3333/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
  agencia-frontend:
    image: gustavodcdamas/agencia-frontend:latest
    container_name: agencia-frontend
    environment:
      - NODE_ENV=${NODE_ENV:-production}
    env_file:
      - .env
    ports:
      - 3535:3535
    networks:
      - agencia-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://127.0.0.1:3535/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Redis
  redis:
    image: redis:latest
    container_name: redis
    env_file: 
      - .env
    command: redis-server --requirepass ${REDIS_PASSWORD:-StrongPassword!} --appendonly yes
    restart: unless-stopped
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
    networks:
      - agencia-network
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD:-StrongPassword!}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL
  postgres:
    image: postgres:latest
    container_name: postgres
    env_file: 
      - .env
    restart: unless-stopped
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - agencia-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-PostgresUser} -d ${POSTGRES_DB:-agencia-db}"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  redis_data:
  postgres_data:

networks:
  agencia-network:
    driver: bridge